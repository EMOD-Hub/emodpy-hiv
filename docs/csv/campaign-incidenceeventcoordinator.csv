"Action_List","array of json objects","","","[]","List (array) of JSON objects, including the values specified in the following parameters: **Threshold**, **Event_Type**, **Event_To_Broadcast**.",".. code-block:: json

    {
      ""Action_List"": [
        {
          ""Event_To_Broadcast"": ""Ind_Start_SIA_2"",
          ""Event_Type"": ""COORDINATOR"",
          ""Threshold"": 5
        },
        {
          ""Event_To_Broadcast"": ""Ind_Start_SIA_4"",
          ""Event_Type"": ""COORDINATOR"",
          ""Threshold"": 2
        }
      ]
    }
"
"Coordinator_Name","string","NA","NA","""""","The unique identifying coordinator name, which is useful with the output report, ReportCoordinatorEventRecorder.csv.",""
"Count_Events_For_Num_Timesteps","boolean","0","1","1","If set to true (1), then the waning effect values, as specified in the Effect_List list of objects for the WaningEffectCombo classes, are added together. If set to false (0), the waning effect values are multiplied. The resulting waning effect value cannot be greater than 1.",".. code-block:: json

    {
      ""Count_Events_For_Num_Timesteps"": 1
    }
"
"Demographic_Coverage","float","0","1","1","The fraction of individuals in the target demographic that are counted.",".. code-block:: json

    {
      ""Incidence_Counter"": {
        ""Counter_Event_Type"": ""NODE"",
        ""Counter_Period"": 14,
        ""Counter_Type"": ""PERIODIC"",
        ""Demographic_Coverage"": 1,
        ""Target_Demographic"": ""Everyone"",
        ""Trigger_Condition_List"": [
          ""Node_Event_1"",
          ""Node_Event_2""
        ]
      }
    }
"
"Event_To_Broadcast","string","NA","NA","""""","The action event to occur when the specified trigger value in the **Threshold** parameter is met. At least one action must be defined for **Event_To_Broadcast**. The events contained in the list can be built-in events (see :doc:`parameter-campaign-event-list` for possible events).",".. code-block:: json

    {
      ""Threshold_Type"": ""COUNT"",
      ""Action_List"": [
        {
          ""Threshold"": 20,
          ""Event_To_Broadcast"": ""Action_Event_1""
        },
        {
          ""Threshold"": 30,
          ""Event_To_Broadcast"": ""Action_Event_2""
        }
      ]
    }
"
"Event_Type","string","NA","NA","INDIVIDUAL","The type of event to be broadcast.  Possible values are:

* COORDINATOR
* INDIVIDUAL
* NODE",".. code-block:: json

    {
      ""Event_Type"": ""NODE""
    }
"
"Incidence_Counter","array of json objects","NA","NA","NA","List of JSON objects for specifying the conditions and parameters that must be met for an incidence to be counted. Some of the values are specified in the following parameters: **Count_Events_For_Num_Timesteps**, **Trigger_Condition_List**, **Node_Property_Restrictions**.
",".. code-block:: json

    {
      ""Incidence_Counter"": {
        ""Count_Events_For_Num_Timesteps"": 5,
        ""Trigger_Condition_List"": [
          ""PropertyChange""
        ],
        ""Node_Property_Restrictions"": [
          {
            ""Risk"": ""HIGH""
          }
        ],
        ""Target_Demographic"": ""Everyone"",
        ""Demographic_Coverage"": 0.6,
        ""Property_Restrictions_Within_Node"": [
          {
            ""Accessibility"": ""YES""
          }
        ]
      }
    }
"
"Node_Property_Restrictions","array of json objects","NA","NA","NA","A list of the **NodeProperty** key:value pairs, as defined in the demographics file, that nodes must have to be targeted by the intervention. See :ref:`demo-properties` parameters for more information.",".. code-block:: json

    {
      ""Node_Property_Restrictions"": [
        {
          ""Place"": ""URBAN"",
          ""Risk"": ""MED""
        },
        {
          ""Place"": ""RURAL"",
          ""Risk"": ""LOW""
        }
      ]
    }
"
"Number_Repetitions","integer","-1","10000","1","The number of times an intervention is given, used with **Timesteps_Between_Repetitions**. A value of -1 implies an infinite number of repetitions.",".. code-block:: json

    {
      ""class"": ""IncidenceEventCoordinator"",
      ""Number_Repetitions"": 3
    }
"
"Property_Restrictions","array of json objects","NA","NA","NA","A list of the **IndividualProperty** key:value pairs, as defined in the demographics file, that individuals must have to be targeted by this intervention. See :ref:`demo-properties` parameters for more information.

To specify AND and OR combinations of key:value pairs, use **Property_Restrictions_Within_Node**. You cannot use both of these parameters in the same event coordinator.",".. code-block:: json

    {
      ""Property_Restrictions"": [
        ""Risk:HIGH""
      ]
    }
"
"Property_Restrictions_Within_Node","array of json objects","NA","NA","NA","A list of the **IndividualProperty** key:value pairs, as defined in the demographics file, that individuals must have to be targeted by this intervention. See :ref:`demo-properties` parameters for more information.

This parameter allows you to specify AND and OR combinations of key:value pairs. You may specify individual property restrictions using either this parameter or **Property_Restrictions**, but not both.",".. code-block:: json

    {
      ""Property_Restrictions_Within_Node"": [
        {
          ""Geographic"": ""URBAN"",
          ""Risk"": ""HIGH""
        },
        {
          ""Geographic"": ""URBAN"",
          ""Risk"": ""MEDIUM""
        }
      ]
    }
"
"Responder","array of json objects","NA","NA","NA","List of JSON objects for specifying the threshold type, values, and the actions to take when the specified conditions and parameters have been met, as configured in the **Incidence_Counter** parameter. Some of the values are specified in the following parameters:

* **Threshold_Type**
* **Action_List**
* **Threshold**
* **Event_To_Broadcast**",".. code-block:: json

    {
      ""Responder"": {
        ""Threshold_Type"": ""COUNT"",
        ""Action_List"": [
          {
            ""Threshold"": 5,
            ""Event_To_Broadcast"": ""Action_Event_1""
          },
          {
            ""Threshold"": 10,
            ""Event_To_Broadcast"": ""Action_Event_2""
          }
        ]
      }
    }
"
"Target_Age_Max","float","-3","9.32E+35","9.32E+35","The upper end of ages targeted for an intervention, in years. Used when **Target_Demographic** is set to ExplicitAgeRanges or ExplicitAgeRangesAndGender.",".. code-block:: json

    {
      ""Target_Age_Max"": 20,
      ""Target_Age_Min"": 10,
      ""Target_Demographic"": ""ExplicitAgeRanges""
    }
"
"Target_Age_Min","float","0","9.3228e+35","0","The lower end of ages targeted for an intervention, in years. Used when **Target_Demographic** is set to ExplicitAgeRanges or ExplicitAgeRangesAndGender.",".. code-block:: json

    {
      ""Target_Age_Max"": 20,
      ""Target_Age_Min"": 10,
      ""Target_Demographic"": ""ExplicitAgeRanges""
    }
"
"Target_Demographic","enum","NA","NA","Everyone","The target demographic group. Possible values are:

* Everyone
* ExplicitAgeRanges
* ExplicitAgeRangesAndGender
* ExplicitGender
* ExplicitDiseaseState",".. code-block:: json

    {
      ""Target_Age_Max"": 20,
      ""Target_Age_Min"": 10,
      ""Target_Demographic"": ""ExplicitAgeRanges""
    }
"
"Target_Gender","enum","NA","NA","All","Specifies the gender restriction for the intervention. Possible values are:

* Male
* Female
* All",".. code-block:: json

    {
      ""Target_Gender"": ""Male""
    }
"
"Target_Residents_Only","boolean","0","1","0","When set to true (1), the intervention is only distributed to individuals that began the simulation in the node (i.e. those that claim the node as their residence).",".. code-block:: json

    {
      ""Target_Residents_Only"": 1
    }
"
"Targeting_Config","json object","NA","NA","NA","Be more selective of individuals by using the :doc:`parameter-campaign-targeting-config`.",".. code-block:: json

    {
      ""Targeting_Config"": {
        ""Intervention_Name"": ""MyVaccine"",
        ""Is_Equal_To"": 0,
        ""class"": ""HasIntervention""
      }
    }
"
"Threshold","float","0","3.40282e+38","0","The threshold value that triggers the specified action for the **Event_To_Broadcast** parameter. When you use the **Threshold** parameter you must also use the **Event_To_Broadcast** parameter.",".. code-block:: json

    {
      ""Action_List"": [
        {
          ""Event_To_Broadcast"": ""Ind_Start_SIA_2"",
          ""Event_Type"": ""COORDINATOR"",
          ""Threshold"": 5
        },
        {
          ""Event_To_Broadcast"": ""Ind_Start_SIA_4"",
          ""Event_Type"": ""COORDINATOR"",
          ""Threshold"": 2
        }
      ]
    }
"
"Threshold_Type","enum","NA","NA","COUNT","Threshold type to indicate how **Responder** handles the count of events from **Incidence_Counter** and the thresholds in **Action_List**. Possible values are:

* COUNT
* PERCENTAGE.",".. code-block:: json

    {
      ""Threshold_Type"": ""COUNT"",
      ""Action_List"": [
        {
          ""Threshold"": 20,
          ""Event_To_Broadcast"": ""Action_Event_1""
        },
        {
          ""Threshold"": 30,
          ""Event_To_Broadcast"": ""Action_Event_2""
        }
      ]
    }
"
"Timesteps_Between_Repetitions","integer","-1","1000","-1","The repetition interval.",".. code-block:: json

    {
      ""class"": ""IncidenceEventCoordinator"",
      ""Number_Repetitions"": 3,
      ""Timesteps_Between_Repetitions"": 6
    }
"
"Trigger_Condition_List","array of strings","NA","NA","[]","A list of events that will trigger an intervention.",".. code-block:: json

    {
      ""Trigger_Condition_List"": [
        ""NewClinicalCase"",
        ""NewSevereCase""
      ]
    }
"
